KBD-CUI

取扱説明書 ver 1.00
________________________________________
はじめに
 KBD-CUIとは
  KBD-CUIとは、"携帯BASIC DESKTOP Command User Interface"の略称です。
  KBD-CUIは、携帯BASIC上でCUI環境を実現するためのソフトウェアです。以下の機能が実現されています。
   インラインかなアルファベット入力
   キャラクタ ベース ユーザー インターフェイス
   多数の標準コマンドの提供
   メニュー・文字入力等の基本的なインターフェイスの提供
   バッチ処理実行機能（簡易プログラミング）

 KBD-CUIの構造
  KBD-CUIは、携帯BASIC上のCUI環境です。
  構造は上層から順に以下の通りです。
   KBD-CUI バッチ処理________
   KBD-CUI 標準コマンド______
   KBD-CUI ________    ||||||
   携帯Basic Javaアプリ______
   Java VM __________________
   携帯電話 ハードウェア_____
   KBD-CUIは非常に上層に位置しているために高機能である一方低速です。また下位のグラフィックアクセラレーターなどのハードウェアにもアクセスすることはできません。
   KBD-CUI 標準コマンドは携帯Basicに直接アクセスができますがその他は一層飛ばしてアクセスすることはできません。

 KBD-CUIを使う意義
  KBD-CUIを使う意義は、標準コマンドを使う事以外にソフトウェアプログラミングが容易になることです。例えばKBD-CUIの標準出力を使うことにより色設定・表示位置設定・スクロール機能の搭載といった作業が不要になります。（再配布は現在できません。）

KBD-CUIの使い方
 入力の仕方
  文字の入力は通常の携帯電話のものと同等です。ただし変換・予測機能、文字の挿入といった機能はありません。文字の切り替えは#キーで行います。ただし、KBD-CUI上ではアルファベットおよび数字以外の入力は基本的に必要ありません。

 実行方法
  KBD-CUIでは、二つの実行方法があります。一つは標準のコマンドを使用するものです。もう一方は同一ディレクトリ内の携帯BASIC・DTP(KBD用)ファイルを実行するものです。これはEXECコマンドと同様です。

 使用方
  引数（"用語"参照）のないコマンドはコマンド名。引数のあるコマンドはコマンド名のあとスペース区切りで引数を入力します。ファイルを実行するときはカレントディレクトリからの相対アドレスを入力してください。
   例
    time
    echo hello
    color 128 255 64
    main.scr
    ../k basic/13.scr

 メニューの操作方
  上下キーで選択し、Ｆキーで決定します。

命令一覧
 引き数あり
  echo(print) a1:a1の内容を表示します。
  exec a1:実行ファイルa1を実行します。
  prompt a1:プロンプト（"用語"参照）をa1に変更します。
   cf prompt:プロンプトを標準の"> "にします。
  color a1 a2 a3:指定色((r,g,b)=(a1,a2,a3))を表示します。
  bgcolor a1 a2 a3:背景色を指定色にします。
  chcolor a1 a2 a3:以下の文字色を指定色にします。（変更前の文字色は変更されません。）
  init a1:a1が1,2,3で基本設定、色、起動コマンドを初期値に戻します。
   cf init:ほとんどの設定を初期値に戻します。
  margin a1:行間をa1ドットに設定します。
   cf margin:行間を表示します。
  light a1:a1が1でバックライトオン、0でオフです。
  vib(vibrator) a1:a1が1でバイブレーションオン、0でオフです。
  error a1:有名エラーメッセージを表示します。
  stopwatch(sw) a1:初回は強制的にカウントスタートです。a1がsでカウントスタート、lでラップカウント、iで一覧表示、mでストップウォッチモードです。
   cf stopwatch(sw):初回は強制的にカウントスタートです。二回目以降はストップウォッチモードです。
  number a1:番号a1に関する情報を表示します。奇数・偶数と約数・素数判定表示、平方根の概数です。
  parallel a1:コマンドa1を引数を入力し順次実行します。
  dir(ls) a1:ディレクトリa1内のファイル一覧を表示します。
   cf dir(ls):カレントディレクトリ内のファイル一覧を表示します。
  cd(chdir) a1:カレントディレクトリをa1に設定します。
   cf cd:カレントディレクトリを表示します。
  usercmd a1:自作コマンドの雛形です。
 引き数なし
  end:KBD-CUIを終了します。
  exit:携帯BASIC Javaアプリを終了します。
  prompt:プロンプトを標準の"> "にします。
  init:ほとんどの設定を初期値に戻します。
  margin:行間を表示します。
  stopwatch(sw):初回は強制的にカウントスタートです。二回目以降はストップウォッチモードです。
  dir(ls):カレントディレクトリ内のファイル一覧を表示します。
  cd:カレントディレクトリを表示します。
  ver:ソフト名、バージョンを表示します。
  cls:画面をクリアします。
  pc98:NECのpc9800シリーズの起動画面に似たものを表示します。(NEC PC9800シリーズからの引用)
  status:携帯電話の状態を表示します。残りメモリ・縦横画面サイズ・クロックカウント・一秒あたりの携帯BASIC処理行数です。
  gc:ガベージコレクションを実行します。
  scroll:画面をスクロール可能な状態にします。上下で一行づつ移動。左右で一画面移動。Ｆキーで終了。
  help:ヘルプを表示します。
  menusample:メニューのサンプルです。
  fileman:簡易ファイラーです。
  calendar:当月分のカレンダーを表示します。
  calc:電卓インターフェイスです。

 電卓系機能
  ("電卓系機能"参照)
  add a1 a2...:引数の値をたしあげます。
  sub a1 a2:a1-a2を出力します。
  mul a1 a2...:引数の値を全てかけた結果を出力します。
  div a1 a2:a1÷a2。および余り。
  mod a1 a2:a1÷a2の余り。
  fanc a1:a1の階乗。
  pow a1 a2:a1のa2乗。
  sin a1:a1の正弦。サイン。
  cos a1:a1の余弦。コサイン。
  tan a1:a1の正接。タンジェント。
  max a1 a2...:引数の最大値。
  min a1 a2...:引数の最小値。
  average a1 a2...:引き数の平均値。
  strlen a1:文字列a1の長さ。
  rand a1:a1未満の乱数を表示します。
  rand:100未満の乱数を表示します。
  memory(m/mov) a1 a2:メモリa1の値をa2にします。
  memory a1:メモリa1の値を最後の計算結果にします。
  memory:番号無しメモリの値を最後の計算結果にします。
  memorylist:メモリ一覧を表示します。
   cf calc:電卓インターフェイスです。

 バッチ処理コマンド
  ("バッチ処理"参照)
  bat a1:バッチa1(,区切り)を実行します。
  bat:バッチを入力して実行します。
  rem a1:コメントa1を記します。ファイルへの入出力がないのに変な機能です。
  rem:コメントがなくても記せます。
  mov(memory/m) a1 a2:a1番目のメモリの値をa2にします。
  mov(memory/m) a1:a1番目のメモリの値を最後の計算結果にします。
  mov(memory/m):番号無しのメモリの値を最後の計算結果にします。
  pause:バッチ処理を一時停止しユーザーのキー入力を待ちます。
  jump(goto) a1:バッチ処理の実行行を強制的にa1にします。
  eq a1 a2 a3:a2=a3の時、バッチ処理の実行行をa1にします。
  comp a1 a2 a3:a2<a3の時、バッチ処理の実行行をa1にします。
  ic a1:intで始まるラベル"int"a1へ飛びます。非推奨です。

その他の機能
 電卓機能
  概要
   電卓系のコマンドがつかえます。
  引数変換機能
   引数のaが最後の計算結果に、mが番号無しのメモリに、mx(xは番号)でx番目のメモリになります。
 バッチ処理機能
   概要
    コマンド処理を一括に記して順次実行する機能です。簡単なプログラムが書けます。
   行番号
    0から始まるコマンドの番号です。バッチ処理はこの順番に実行されますがgoto,eq,compなどの命令で実行している行番号を変更できます。この行を実行行とよんでいます。
   autoExec
    ラベルintAutoExec内の
     batText=""
    の""に','(コンマ)区切りのバッチを書き込むと起動時に実行されます。
 エラー
  概要
   どんなエラーがでてもファイル入出力がないので問題ありません。ただ、場合によってはclaimerの掲示板等にしるしていただければ助かります。
  種類
   Syntax Error :'文字列'
    文法が誤っているという意味です。存在しないコマンドを使ったときや、引き数に対応しないコマンドに引き数を渡したり、その逆をした時にあらわれます。
   Command Not Found :'文字列'
    コマンドparallelで現れます。コマンドが存在しないか、引き数に対応しないコマンドかのどちらかです。
   JavaのExeption
    ソフトのバグの可能性があります。cuiの画面から変わり終了した時などです。この時は通知いただくとありがたいこともあります。

用語
 引数:コマンドに知らせられる（渡される）文字列や数字です。この内容によりコマンドの動作を変更できます。
 コマンド:命令のことでソフトウェアのようなものです。
